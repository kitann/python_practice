# THIS QUESTION HAS BEEN ASKED MANY TIME DURING AN INTERVIEW
# A SENTENCE IS PROVIDED AND THE APPLICANT IS ASKED TO WRITE A CODE THAT RETURNS THE NUMBER OF TIME A CHARACTER
# IS REPEATED IN THE SENTENCE
# SOUNDS LIKE FUN TO ME, ENJOY IT !!!! :P

# I WILL DEFINE THE VARIABLE FIRST
real_sentence = "We want to find out how many time each alphabet is repeated including the space"

# I WILL BE COLLECTING THE RETURNED DATA IN A DICTIONARY, HENCE I'LL SET IT BELOW

char_appearance = {}

# I WILL USE THE FOR LOOP FOR LOOP THROUGH THE SENTENCE
for char in real_sentence:

    # I WILL USE THE IF STATEMENT TO SET THE CONDITION TO SEE IF THERE IS A REPEATED CHARACTER IN THE SENTENCE
    if char in char_appearance:

        # IF A CHARACTER HAS BEEN FOUND ONCE, THE CONDITION BELOW WILL INCREMENT IT BY ONE
        char_appearance[char] += 1

    # THIS STATEMENT WILL OTHERWISE REGITER A COUNT OF 1 FOR THE CHARACTER IF IT HAS NOT BEEN REPEATED
    else:
        char_appearance[char] = 1

# I WILL PRINT THE DICTIONARY HERE
# SINCE WE ARE INTERESTED IN JUST RETURNING THE CHARACTER OR SPACE WITH THE HIGHEST OCCURENCE
# I WILL BE USING THW SORTED METHOD/FUNCTION

char_appearance_sorted = sorted(char_appearance.items(),
       key=lambda value: value[1],
       reverse=True)

# THE RESULT OF THIS IS A SORTED OUTPUT IS A LONG LIST BUT WE WANT JUST ONE, FOR CLARITY SAKE, LET ME RUN THE CODE
# NOW WE WILL BE ADDING AN INDEX IN THE VALUE TO RETURN HIGHEST APPEARANCE.

print(char_appearance_sorted)

# JUST LOOK AT THE OUTPUT AND YOU SHOULD FIND THE CHARACTER/ALPHABET THAT OCCURRED THE MOST.
# THANKS FOR WATCHING :P